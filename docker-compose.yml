version: "3.9"

services:
  calendarsvc:
    image: calendarsvc
    container_name: calendar_svc
    build:
      context: .
      dockerfile: ./build/calendar/Dockerfile
    ports:
      - "8080:8081"
    restart: on-failure
    environment:
      HTTP_PORT: "8081"
      GRPC_PORT: "8082"
      DB_GRPC_PORT: "8084"
      DB_CONTAINER_NAME: "dbsvc"
      AUTH_GRPC_PORT: "8083"
      AUTH_CONTAINER_NAME: "authsvc"
    depends_on:
      - dbsvc
      - authsvc
    networks:
      - db_bridge

  calendarsvc_test:
    image: calendarsvc
    command:
      bash -c "cd calendar-app && CGO_ENABLED=0 GOOS=linux go test -v ./..."
    restart: on-failure
    environment:
      CALENDAR_HTTP_PORT: "8081"
      CALENDAR_CONTAINER_NAME: "calendarsvc"
    depends_on:
      - calendarsvc
      - dbsvc
      - authsvc
    networks:
      - db_bridge

  authsvc:
    container_name: auth_svc
    build:
      context: .
      dockerfile: ./build/auth/Dockerfile
    ports:
      - "8083:8083"
    restart: on-failure
    environment:
      ACCESS_SECRET: "goaccess"
      REFRESH_SECRET: "gorefresh"
      REDIS_PORT: "6379"
      REDIS_CONTAINER_NAME: "echo_redis"
      GRPC_PORT: "8083"
      DB_GRPC_PORT: "8084"
      DB_CONTAINER_NAME: "dbsvc"

    depends_on:
      - echo_redis
      - dbsvc
    networks:
      - db_bridge

  dbsvc:
    container_name: db_svc
    build:
      context: .
      dockerfile: ./build/db/Dockerfile
    ports:
      - "5000:8081"
      - "8084:8084"
    restart: on-failure
    environment:
      HTTP_PORT: "8081"
      GRPC_PORT: "8084"
      DATABASE_URL: "postgres://gouser:gopassword@db:5432/gotest?sslmode=disable"
    depends_on:
      - db
      - migrate
    networks:
      - db_bridge

  prometheus:
    image: prom/prometheus:latest
    logging:
      driver: none
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    depends_on:
      - calendarsvc

  grafana:
    image: grafana/grafana:7.5.6
    logging:
      driver: none
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  db:
    image: postgres:alpine
    restart:
      always
    ports:
      - "5432:5432"
    logging:
      driver: none
    volumes:
      - ./initdb.d:/docker-entrypoint-initdb.d/
      - database-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: gotest
      POSTGRES_USER: gouser
      POSTGRES_PASSWORD: gopassword
    networks:
      - db_bridge

  echo_redis:
    image: redis:latest
    restart: unless-stopped
    logging:
      driver: none
    ports:
      - "6379:6379"
    networks:
      - db_bridge

  migrate:
    image: migrate/migrate
    networks:
      - db_bridge
    depends_on:
      - db
    volumes:
      - ./db/migrations:/migrations
    command:
      [ "-path", "/migrations", "-database",  "postgres://gouser:gopassword@db:5432/gotest?sslmode=disable", "up" ]

networks:
  db_bridge:
    driver: bridge

volumes:
  database-data: